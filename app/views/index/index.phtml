<?php include Yaf\View\Simple::getScriptPath().'/commom/header.phtml';?>
<template>
  <el-carousel :interval="5000" arrow="always">
    <el-carousel-item v-for="item in 4" :key="item">
      <h3>{{ item }}</h3>
    </el-carousel-item>
  </el-carousel>
</template>
<div class="container">
	<div class="main">
		<ul>
			<li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li>
			<li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li><li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li><li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li><li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li><li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li><li>
				<h3>
				<a href="">Yac (Yet Another Cache) – 无锁共享内存Cache</a>
                </h3>
				<p>开始的时候, 我只是给APC增加了一个开关apc.opcode_cache_enable, 这样一来, 用户就可以使用APC然而关闭opcode cache来达到这个目的, 但是APC的User Data Cache使用的存储机制是和Opcode Cache一样的, 这样的场景要求数据严格正确, 所以锁会比较多, 测试表明, APC的User Data Cache的效率和本地memcached几乎相当.</p>
				<div>
					<el-tag>标签一</el-tag>
                    <el-tag type="success">标签二</el-tag>
                    <el-tag type="info">标签三</el-tag>
                    <el-tag type="warning">标签四</el-tag>
                    <el-tag type="danger">标签五</el-tag>
                    
				</div>
				<p><span>2018-03-21 18:22:49</span></p>
			</li>
		</ul>
	</div>
	<div class="aside"></div>
</div> 
<?php include Yaf\View\Simple::getScriptPath().'/commom/footer.phtml';?>